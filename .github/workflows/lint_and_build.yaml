name: 🐋 Publish docker image
on: [push]


env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    lint:
        name: ✨ Lint
        runs-on: ubuntu-latest
        steps:
            -   name: 👀 Check out the repo
                uses: actions/checkout@v4
            -   name: 🏗️ Set up Python
                uses: actions/setup-python@v6
                with:
                    python-version: '3.13'
                    cache: 'pip'
            -   name: ⬇️ Install dependencies
                run: |
                    pip install ruff ty
            -   name: 🧹 Lint
                run: |
                    ruff check .
            -   name: 📏 Format
                run: |
                    ruff format . --check
    build:
        name: ⬆️ Push Docker image
        needs: lint
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            -   name: 👀 Check out the repo
                uses: actions/checkout@v4

            -   name: 🔑 Log in to Docker Registry
                uses: docker/login-action@v3
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: 📦 Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v5
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                    tags: |
                        type=sha
                        type=edge,branch=main
        
            -   name: 🐳 Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: 🐳 Build and push Docker image
                uses: docker/build-push-action@v6
                with:
                    context: .
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    cache-from: type=gha
                    cache-to: type=gha,mode=max

    deploy:
        name: 🚀 Deploy
        needs: build
        runs-on: ubuntu-latest
        environment: spotiviewbot
        steps:
            -   name: 👀 Check out the repo
                uses: actions/checkout@v4
            -   name: 🤫 Make envfile
                uses: SpicyPizza/create-envfile@v2.0
                with:
                    envkey_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
                    envkey_SPOTIPY_CLIENT_ID: ${{ secrets.SPOTIPY_CLIENT_ID }}
                    envkey_SPOTIPY_CLIENT_SECRET: ${{ secrets.SPOTIPY_CLIENT_SECRET }}
                    envkey_LOG_LEVEL: "WARN"
            -   name: 🚀 Deploy
                uses: cssnr/stack-deploy-action@v1
                with:
                    name: ${{ env.GITHUB_REPOSITORY }}
                    file: compose.yml
                    env_file: .env
                    host: ${{ secrets.DOCKER_HOST }}
                    user: ${{ secrets.DOCKER_USER }}
                    ssh_key: ${{ secrets.DOCKER_KEY }}
                    mode: compose
