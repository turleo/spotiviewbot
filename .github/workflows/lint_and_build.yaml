name: 🐋 Publish docker image
on: [push]


env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    lint:
        name: ✨ Lint
        runs-on: ubuntu-latest
        steps:
            - name: 👀 Check out the repo
                uses: actions/checkout@v4
            - name: 🏗️ Set up Python
                uses: actions/setup-python@v4
                with:
                    python-version: '3.13'
            - name: ⬇️ Install dependencies
                run: |
                    pip install ruff ty
            - name: 🧹 Lint
                run: |
                    ruff check .
            - name: 📏 Format
                run: |
                    ruff format . --check
    build:
        name: ⬆️ Push Docker image
        needs: lint
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - name: 👀 Check out the repo
                uses: actions/checkout@v4

            - name: 🔑 Log in to Docker Registry
                uses: docker/login-action@v3
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            - name: 📦 Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v5
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                    tags: |
                        type=sha
                        type=edge,branch=main
        
            - name: 🐳 Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            - name: 🐳 Build and push Docker image
                uses: docker/build-push-action@v6
                with:
                    context: .
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    cache-from: type=gha
                    cache-to: type=gha,mode=max
